// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(EvcilDbContext))]
    [Migration("20230830075425_mig_Change_All_Table")]
    partial class migChangeAllTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityLayer.Concrete.AsiTakibi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AsininYapildigiTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("YapilanAsininTuru")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("asiTakibis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BeslenmeTakibi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlerjikReaksiyonGosterdigiBesinler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KullandigiMamaTuru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullandigiOdulMamalari")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MamaAromasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MamaMarkasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeSikliklaVeriliyor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuTuketimOrani")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UygunOlanOgunMiktari")
                        .HasColumnType("int");

                    b.Property<DateTime?>("YemekSaatiUyarisi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("beslenmeTakibis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EvcilHayvanlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HayvaninAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EvcilHayvanlar");
                });

            modelBuilder.Entity("EntityLayer.Concrete.HayvaniminBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklamasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AyniEvdeYasayanBaskaHayvanVarmi")
                        .HasColumnType("bit");

                    b.Property<string>("Cinsiyeti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("EvcilHayvanlarId")
                        .HasColumnType("int");

                    b.Property<string>("HastalikAciklamaveKullandigiIlaclar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HerhangiBirHastaligiVarmi")
                        .HasColumnType("bit");

                    b.Property<string>("Irki")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Kilosu")
                        .HasColumnType("int");

                    b.Property<bool?>("Kisirlastirilmismi")
                        .HasColumnType("bit");

                    b.Property<bool?>("KullanilanTakviyeveVitaminVarmi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SahiplenildigiTarih")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("TakipCipiVarmi")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Yasi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EvcilHayvanlarId");

                    b.ToTable("hayvaniminBilgileris");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SaglikTakibi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("DuzenliOlarakGidilenVeterinerVarmi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("EvcilHayvaninizdaGozlemlediginizFarklilik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeciciHastalikAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GeciciHastalikVarmi")
                        .HasColumnType("bit");

                    b.Property<string>("HayvaninizinKiloDurumu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("KalitsalHastalik")
                        .HasColumnType("bit");

                    b.Property<string>("KalitsalHastalikAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KlinikAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KlinikAdres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KlinikTelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VeterinerAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("saglikTakibis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SosyalAktiviteleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("DisariCikiyormu")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("HayvaniniziMutluEdenSeyler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HayvaniniziOfkelendirenSeyler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeSikliklaCikiyor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeSikliklaSeyaheteCikiyorsunuz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnuSakinlestirmekIcinKullandiginizYontemler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OyunOynamaZamaniUyarisi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("OyuncaklarlaIlgilenirmi")
                        .HasColumnType("bit");

                    b.Property<bool?>("SeyahetEdermisiniz")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("sosyalAktiviteleris");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TemizlikTakibi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgizBakimiNeSikliklaYapiliyor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BakimTakipUyarisi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenelTemizlikTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KulakTemizligiNeSikliklaYapiliyor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeSikliklaPatiBakimiYapiyorsunuz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeSikliklaTuyleriniTararsiniz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeSikliklaYikiyorsunuz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TirnaklariNeSikliklaKesiyorsunuz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("temizlikTakibis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.HayvaniminBilgileri", b =>
                {
                    b.HasOne("EntityLayer.Concrete.EvcilHayvanlar", "EvcilHayvanlar")
                        .WithMany()
                        .HasForeignKey("EvcilHayvanlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvcilHayvanlar");
                });
#pragma warning restore 612, 618
        }
    }
}
